<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- 指定工作空间，要与接口名相同，源代码没有去看，猜测应该是通过"这里的namespace.下边方法的id"来定位方法的 -->
<mapper namespace="com.gugu.gugumodel.mapper.KlassStudentMapper">
    <select id="findTeamIdByStudentIdAndCourseId" resultType="java.lang.Long">
        select team_student.team_id from klass_student,team_student,klass_team where klass_student.student_id=#{param1} and klass_student.course_id=#{param2}
        and klass_student.klass_id=klass_team.klass_id and team_student.student_id=#{param1} and klass_team.team_id=team_student.team_id
    </select>

    <insert id="newStudentToClass">
        insert klass_student(klass_id,student_id,course_id) values (#{param1},#{param2},#{param3})
    </insert>

    <delete id="deleteByKlass" parameterType="java.lang.Long">
        delete from klass_student where klass_id=#{param1}
    </delete>


    
    <select id="getTeamIdByClassAndStatus" resultType="java.lang.Long">
        select team_id from klass_student where klass_id=#{param1} and student_id=#{studentId}
    </select>

    <select id="getKlassIdByCourseAndStudent" resultType="java.lang.Long">
        select klass_id from klass_student where course_id=#{param1} and student_id=#{param2}
    </select>

    <insert id="addMember">
        insert into team_student(team_id, student_id) values (#{teamId},#{studentId})
    </insert>

    <select id="getStudentTeam" resultType="java.lang.Long">
        select team_id from team_student where student_id=#{arg0}
    </select>

    <select id="getStudentByTeamId" resultType="java.lang.Long">
        select distinct student_id from team_student where team_id=#{param1}
    </select>

    <update id="removeAllMemberByCourseId">
        update klass_student set team_id=null where course_id=#{param1}
    </update>

    <update id="updateTeamByStudentId">
        update klass_student set team_id=#{param2} where student_id=#{param1}
    </update>

    <delete id="removeKlassTeamRelaton" parameterType="java.lang.Long">
        delete from klass_team where team_id=#{arg0}
    </delete>

    <delete id="removeStudentTeamRelation">
        delete from team_student where team_id=#{arg0}
    </delete>

    <select id="getStudentInCourse" parameterType="java.lang.Long" resultType="com.gugu.gugumodel.entity.StudentEntity">
        select student.id id, student.is_active isActive,student.student_name studentName,student.account account,student.email email from klass_student,student where klass_student.course_id=#{arg0} and student.id=klass_student.student_id
    </select>
    <select id="getTeamIdByStudentAndCourse" resultType="java.lang.Long">
        select team_id from team_student where student_id=#{studentId} and team_id in
        (select id from team where course_id=#{courseId})
    </select>

    <delete id="deleteReceiveTeamShare" parameterType="java.lang.Long">
        delete  from klass_team where klass_team.klass_id in (select klass.id from klass where klass.course_id=#{param1})
    </delete>

    <select id="getStudentWithoutTeam" parameterType="java.lang.Long" resultType="com.gugu.gugumodel.entity.StudentEntity">
        select DISTINCT student.id id, student.is_active isActive,student.student_name studentName,student.account account,student.email email from
        klass_student,student,team_student where student.id!=#{param2} and klass_student.course_id=#{param1} and student.id=klass_student.student_id and student.id not in
        (select team_student.student_id from team_student,klass,klass_team where team_student.student_id=student.id and team_student.team_id=klass_team.team_id and klass_team.klass_id=klass.id and klass.course_id=#{param1})
    </select>

    <select id="getTeamIdByClassAndStudent" resultType="java.lang.Long">
        select team_student.team_id from team_student,klass_team where
        team_student.student_id=#{param2} and klass_team.klass_id=#{param1}
        and klass_team.team_id=team_student.team_id
    </select>
</mapper>