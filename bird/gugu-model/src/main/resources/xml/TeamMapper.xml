<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- 指定工作空间，要与接口名相同，源代码没有去看，猜测应该是通过"这里的namespace.下边方法的id"来定位方法的 -->
<mapper namespace="com.gugu.gugumodel.mapper.TeamMapper">
    <resultMap id="TeamEntityMap" type="com.gugu.gugumodel.entity.TeamEntity">
        <id column="id" jdbcType="BIGINT" property="id"/>
        <result column="klass_id" jdbcType="BIGINT" property="klassId"/>
        <result column="course_id" jdbcType="BIGINT" property="courseId"/>
        <result column="leader_id" jdbcType="BIGINT" property="leaderId"/>
        <result column="team_name" jdbcType="VARCHAR" property="teamName"/>
        <result column="team_serial" jdbcType="TINYINT" property="teamSerial"/>
        <result column="status" jdbcType="TINYINT" property="status"/>
    </resultMap>
    <select id="findTeamById" parameterType="java.lang.Long" resultMap="TeamEntityMap">
        select id,klass_id,course_id,leader_id,team_name,team_serial,
               status from team where id=#{arg0}
    </select>

    <select id="getLeaderId" parameterType="java.lang.Long">
        select leader_id from team where id=#{arg0}
    </select>

    <update id="updateTeam" parameterType="com.gugu.gugumodel.entity.TeamEntity">
        update team set klass_id=#{klassId},course_id=#{courseId},leader_id=#{leaderId},team_name=#{teamName},status=#{status}
        where id=#{id}
    </update>

    <delete id="deleteStudentFromTeam" parameterType="java.lang.Long">
        delete from team_student where team_id=#{arg0}
    </delete>

    <insert id="buildRelationStuAndTeam">
        insert into team_student values (#{teamId},#{studentId})
    </insert>

    <delete id="deleteTeam" parameterType="java.lang.Long">
        delete from team where id=#{arg0}
    </delete>

    <delete id="deleteStudentTeamRelation" parameterType="java.lang.Long">
        delete from team_student where team_id=#{arg0}
    </delete>

    <delete id="removeMember" >
        delete from team_student where student_id=#{studentId} and team_id=#{teamId}
    </delete>

    <select id="getTeamIdByKlassId" parameterType="java.lang.Long" resultType="java.lang.Long">
        select team_id from klass_team where klass_id=#{param1}
    </select>

    <delete id="deleteByKlassId" parameterType="java.lang.Long">
        delete from team where klass_id=#{param1}
    </delete>

    <insert id="newTeam" useGeneratedKeys="true" keyProperty="id" parameterType="com.gugu.gugumodel.entity.TeamEntity">
        insert into team (klass_id,course_id,leader_id,team_name,team_serial,status)
        values (#{klassId},#{courseId},#{leaderId},#{teamName},#{teamSerial},#{status})
    </insert>

    <insert id="newKlassTeam" parameterType="com.gugu.gugumodel.entity.TeamEntity">
        insert into klass_team(klass_id, team_id) values (#{klassId},#{id})
    </insert>

    <select id="getKlassIdByTeamId" parameterType="java.lang.Long" resultType="java.lang.Long">
        select klass_id from team where id=#{arg0}
    </select>

    <update id="changeTeamStatus">
        update team set status=#{param2} where id=#{param1}
    </update>

    <select id="getAllTeamByCourse" parameterType="java.lang.Long" resultMap="TeamEntityMap">
        select team.id,team.leader_id,team.team_name,team.team_serial,
               team.status from team,klass_team,klass where klass.course_id=#{param1} and klass.id=klass_team.klass_id
              and team.id=klass_team.team_id
    </select>

    <delete id="deleteAllTeamByCourseId">
        delete from klass_team where klass.course_id=#{param1} and klass.id=klass_team.klass_id
    </delete>

    <select id="getAllTeamByCourseId" resultMap="TeamEntityMap">
        select * from team
        where course_id=#{param1}
    </select>

    <insert id="createKlassTeam">
        insert into klass_team values (#{param2},#{param1})
    </insert>
    <select id="getSerial" parameterType="java.lang.Long" resultType="java.lang.Byte">
        select team_serial from team where klass_id=#{arg0}
    </select>

    <select id="getTeamById" parameterType="java.lang.Long" resultType="com.gugu.gugumodel.entity.TeamEntity">
        select * from team where id=#{arg0}
    </select>

    <select id="getTeamStatusById" parameterType="java.lang.Long" resultType="java.lang.Byte">
        select status from team where id=#{arg0}
    </select>

    <update id="setStatus">
        update team set status=#{param2} where id=#{param1}
    </update>

</mapper>